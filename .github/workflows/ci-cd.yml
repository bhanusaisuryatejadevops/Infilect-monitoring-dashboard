name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      BACKEND_IMAGE: suryatejainfra/monitoring-backend
      FRONTEND_IMAGE: suryatejainfra/monitoring-frontend

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Backend install & test
      - name: Install & test backend
        working-directory: backend
        run: |
          npm install
          npm run lint || true
          npm test || true

      # Frontend install & test
      - name: Install & test frontend
        working-directory: frontend
        run: |
          npm install
          npm run lint || true
          npm test || true

      # Log in to Docker Hub
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & push backend
      - name: Build & push backend image
        run: |
          docker build -t $BACKEND_IMAGE:latest ./backend
          docker push $BACKEND_IMAGE:latest

      # Build & push frontend
      - name: Build & push frontend image
        run: |
          docker build -t $FRONTEND_IMAGE:latest ./frontend
          docker push $FRONTEND_IMAGE:latest

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.27.3

      # Configure kubeconfig
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      # Deploy to k3s
      - name: Deploy to k3s
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml
          kubectl rollout restart deployment backend -n monitoring
          kubectl rollout restart deployment frontend -n monitoring
